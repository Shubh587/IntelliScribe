{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shubh\\\\OneDrive\\\\Desktop\\\\College\\\\Design Project\\\\client\\\\src\\\\pages\\\\Model.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n// import {Formik, Form, Field, ErrorMessage} from \"formik\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Model() {\n  _s();\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  const [patientEmail, setPatientEmail] = useState([]);\n  const [doctorEmail, setDoctorEmail] = useState([]);\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your Browser does not support speech to text recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n  const submitVisit = (patientEmail, doctorEmail, transcript) => {\n    axios.post(\"http://localhost:3001/patient/createVisit\", {\n      patient_email: patientEmail,\n      doctor_email: doctorEmail,\n      text: transcript\n    }, {\n      headers: {\n        accessToken: sessionStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        console.log(\"Creating Visit Error\");\n        alert(response.data.error);\n      } else {\n        alert(\"Successfully submitted visit info\");\n        console.log(\"Visit was successfully created\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modelPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Model Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Start conversation: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: transcript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Microphone: \", listening ? 'on' : 'off']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SpeechRecognition.startListening({\n        continuous: true\n      }),\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SpeechRecognition.stopListening,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetTranscript,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"patientEmail\",\n      placeholder: \"Patient Email\",\n      required: true,\n      onChange: e => setPatientEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"doctorEmail\",\n      placeholder: \"Doctor Email\",\n      required: true,\n      onChange: e => setDoctorEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitVisit(patientEmail, doctorEmail, transcript),\n      className: \"submitVisit\",\n      type: \"submit\",\n      children: \" Submit Visit Info \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Model, \"oSNatg36MW8SD4b7PJOdc5vpENs=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = Model;\nexport default Model;\nvar _c;\n$RefreshReg$(_c, \"Model\");","map":{"version":3,"names":["React","SpeechRecognition","useSpeechRecognition","useState","axios","jsxDEV","_jsxDEV","Model","_s","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","patientEmail","setPatientEmail","doctorEmail","setDoctorEmail","children","fileName","_jsxFileName","lineNumber","columnNumber","submitVisit","post","patient_email","doctor_email","text","headers","accessToken","sessionStorage","getItem","then","response","data","error","console","log","alert","className","onClick","startListening","continuous","stopListening","type","name","placeholder","required","onChange","e","target","value","_c","$RefreshReg$"],"sources":["C:/Users/shubh/OneDrive/Desktop/College/Design Project/client/src/pages/Model.js"],"sourcesContent":["import React from 'react';\r\nimport SpeechRecognition, {useSpeechRecognition} from 'react-speech-recognition';\r\n// import {Formik, Form, Field, ErrorMessage} from \"formik\";\r\nimport {useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Model() {\r\n    const {\r\n        transcript,\r\n        listening,\r\n        resetTranscript,\r\n        browserSupportsSpeechRecognition\r\n    } = useSpeechRecognition();\r\n\r\n    const [patientEmail, setPatientEmail] = useState([]);\r\n    const [doctorEmail, setDoctorEmail] = useState([]);\r\n\r\n    if(!browserSupportsSpeechRecognition) {\r\n        return <span>Your Browser does not support speech to text recognition</span>\r\n    }\r\n\r\n    const submitVisit = (patientEmail, doctorEmail, transcript) => {\r\n        axios.post(\"http://localhost:3001/patient/createVisit\", {\r\n            patient_email: patientEmail,\r\n            doctor_email: doctorEmail,\r\n            text: transcript\r\n        }, \r\n            {\r\n                headers: {\r\n                accessToken: sessionStorage.getItem(\"accessToken\"),\r\n            }\r\n        }). then((response) => {\r\n            if(response.data.error) {\r\n                console.log(\"Creating Visit Error\");\r\n                alert(response.data.error);\r\n            } else {\r\n                alert(\"Successfully submitted visit info\");\r\n                console.log(\"Visit was successfully created\");\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n  return (\r\n    <div className=\"modelPage\">\r\n        <h1>Model Page</h1>\r\n        <br />\r\n        <h3>Start conversation: </h3>\r\n        <p>{transcript}</p>\r\n\r\n        <p>Microphone: {listening ? 'on' : 'off'}</p>\r\n        <button onClick={SpeechRecognition.startListening({continuous: true})}>Start</button>\r\n        <button onClick={SpeechRecognition.stopListening}>Stop</button>\r\n        <button onClick={resetTranscript}>Reset</button>\r\n        <br />\r\n        <input type=\"text\" name=\"patientEmail\" placeholder='Patient Email' required onChange={(e) => setPatientEmail(e.target.value)} />\r\n        <br />\r\n        <input type=\"text\" name=\"doctorEmail\" placeholder='Doctor Email' required onChange={(e) => setDoctorEmail(e.target.value)} />\r\n        <br />\r\n        <button onClick={submitVisit(patientEmail, doctorEmail, transcript)} className='submitVisit' type=\"submit\"> Submit Visit Info </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Model"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}