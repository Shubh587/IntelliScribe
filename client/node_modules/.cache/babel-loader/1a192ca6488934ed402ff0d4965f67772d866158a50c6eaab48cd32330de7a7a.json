{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shubh\\\\OneDrive\\\\Desktop\\\\College\\\\Design Project\\\\client\\\\src\\\\pages\\\\DoctorRegistration.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport axios from \"axios\";\nimport * as Yup from \"yup\";\nimport { useNavigate } from 'react-router-dom';\nimport DefaultNavbar from '../components/DefaultNavbar';\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorRegistration() {\n  _s();\n  let navigate = useNavigate();\n  const initialValues = {\n    doctor_email: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    passcode: \"\",\n    phone_number: \"\",\n    office_streetname: \"\",\n    office_city: \"\",\n    office_state: \"\",\n    office_zipcode: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    doctor_email: Yup.string().email().required(\"Must enter an email!\"),\n    first_name: Yup.string().required(\"Must enter your first name!\"),\n    last_name: Yup.string().required(\"Must enter your last name!\"),\n    passcode: Yup.string().required(\"Must enter a password!\").min(5).max(50),\n    phone_number: Yup.string().required(\"Must enter a phone number\").min(10).max(12),\n    office_streetname: Yup.string().required(\"Must enter your office's streetname\"),\n    office_city: Yup.string().required(\"Must enter the city where your office is located\"),\n    office_state: Yup.string().required(\"Must enter the state where your office is located\"),\n    office_zipcode: Yup.string().required(\"Must enter the zipcode where your office is located\")\n  });\n  const onSubmit = data => {\n    axios.post(\"http://localhost:3001/register\", data).then(response => {\n      if (response.data.error) {\n        console.log(\"Failed to create Doctor Profile\");\n        console.log(response.data.error);\n        alert(response.data.error);\n      } else {\n        console.log(data);\n        console.log(\"Successfully created Doctor Profile\");\n        alert(\"Successfully created Doctor Profile\");\n        navigate(\"/login\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DoctorRegistrationPage\",\n    children: [/*#__PURE__*/_jsxDEV(DefaultNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorRegistration, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorRegistration;\nexport default DoctorRegistration;\nvar _c;\n$RefreshReg$(_c, \"DoctorRegistration\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","axios","Yup","useNavigate","DefaultNavbar","jsxDEV","_jsxDEV","DoctorRegistration","_s","navigate","initialValues","doctor_email","first_name","last_name","passcode","phone_number","office_streetname","office_city","office_state","office_zipcode","validationSchema","object","shape","string","email","required","min","max","onSubmit","data","post","then","response","error","console","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shubh/OneDrive/Desktop/College/Design Project/client/src/pages/DoctorRegistration.js"],"sourcesContent":["import React from 'react'\r\nimport {Formik, Form, Field, ErrorMessage} from \"formik\"\r\nimport axios from \"axios\";\r\nimport * as Yup from \"yup\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DefaultNavbar from '../components/DefaultNavbar';\r\nimport \"../App.css\";\r\n\r\nfunction DoctorRegistration() {\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const initialValues = {\r\n        doctor_email: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        passcode: \"\",\r\n        phone_number: \"\",\r\n        office_streetname: \"\",\r\n        office_city: \"\",\r\n        office_state: \"\",\r\n        office_zipcode: \"\"\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        doctor_email: Yup.string().email().required(\"Must enter an email!\"),\r\n        first_name: Yup.string().required(\"Must enter your first name!\"),\r\n        last_name: Yup.string().required(\"Must enter your last name!\"),\r\n        passcode: Yup.string().required(\"Must enter a password!\").min(5).max(50),\r\n        phone_number: Yup.string().required(\"Must enter a phone number\").min(10).max(12),\r\n        office_streetname: Yup.string().required(\"Must enter your office's streetname\"),\r\n        office_city: Yup.string().required(\"Must enter the city where your office is located\"),\r\n        office_state: Yup.string().required(\"Must enter the state where your office is located\"),\r\n        office_zipcode: Yup.string().required(\"Must enter the zipcode where your office is located\")\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        axios.post(\"http://localhost:3001/register\", data).then((response) => {\r\n            if(response.data.error) {\r\n                console.log(\"Failed to create Doctor Profile\");\r\n                console.log(response.data.error);\r\n                alert(response.data.error);\r\n            } else {\r\n                console.log(data);\r\n                console.log(\"Successfully created Doctor Profile\");\r\n                alert(\"Successfully created Doctor Profile\");\r\n                navigate(\"/login\");\r\n            }\r\n        });\r\n    };\r\n\r\n  return (\r\n    <div className=\"DoctorRegistrationPage\">\r\n        <DefaultNavbar />\r\n        <div>\r\n\r\n        </div>\r\n        \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DoctorRegistration"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}