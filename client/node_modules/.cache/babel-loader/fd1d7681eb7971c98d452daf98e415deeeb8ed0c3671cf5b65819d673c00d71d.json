{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shubh\\\\OneDrive\\\\Desktop\\\\College\\\\Design Project\\\\client\\\\src\\\\pages\\\\PatientRegistration.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport axios from \"axios\";\nimport * as Yup from \"yup\";\nimport { useNavigate } from 'react-router-dom';\nimport DoctorNavbar from '../components/DoctorNavbar';\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientRegistration() {\n  _s();\n  let navigate = useNavigate();\n  const initialValues = {\n    patient_email: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    streetname: \"\",\n    city: \"\",\n    state: \"\",\n    zipcode: \"\",\n    sex: \"\",\n    gender: \"\",\n    age: \"\",\n    date_of_birth: \"\",\n    phone_number: \"\",\n    profession: \"\",\n    card_number: \"\",\n    expiration_date: \"\",\n    insurance_name: \"\",\n    policy_num: \"\",\n    group_num: \"\",\n    copay: \"\",\n    pharmacy_name: \"\",\n    pharmacy_streetname: \"\",\n    pharmacy_city: \"\",\n    pharmacy_state: \"\",\n    pharmacy_zipcode: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    patient_email: Yup.string().email().required(\"Must enter an email!\"),\n    first_name: Yup.string().required(\"Must enter your first name!\"),\n    last_name: Yup.string().required(\"Must enter your last name!\"),\n    streetname: Yup.string().required(\"Must enter the street name of your home address!\"),\n    city: Yup.string().required(\"Must enter the city of your home address\"),\n    state: Yup.string().required(\"Must enter the state of your home address\"),\n    zipcode: Yup.string().required(\"Must enter the zipcode of your home address\"),\n    sex: Yup.string().required(\"Must enter your sex!\"),\n    gender: Yup.string().required(\"Must enter your gender!\"),\n    age: Yup.string().required(\"Must enter your age!\"),\n    date_of_birth: Yup.string().required(\"Must enter your date of birth\"),\n    phone_number: Yup.string().required(\"Must enter your phone number!\"),\n    profession: Yup.string().required(\"Must enter your profession!\"),\n    card_number: Yup.string().required(\"Must enter your credit card number!\"),\n    expiration_date: Yup.string().required(\"Must enter your card's expiration date!\"),\n    insurance_name: Yup.string().required(\"Must enter the insurance company you use!\"),\n    policy_num: Yup.string().required(\"Must enter the policy number!\"),\n    group_num: Yup.string().required(\"Must enter the group number!\"),\n    copay: Yup.string().required(\"Must enter the copay amount\"),\n    pharmacy_name: Yup.string().required(\"Must enter the pharmacy name!\"),\n    pharmacy_streetname: Yup.string().required(\"Must enter the street name of your pharmacy!\"),\n    pharmacy_city: Yup.string().required(\"Must enter the city of your pharmacy!\"),\n    pharmacy_state: Yup.string().required(\"Must enter the state of your pharmacy!\"),\n    pharmacy_zipcode: Yup.string().required(\"Must enter the zipcode of your pharmacy!\")\n  });\n  const onSubmit = data => {\n    axios.post(\"http://localhost:3001/register/patient\", data, {\n      headers: {\n        accessToken: sessionStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        console.log(\"Failed to create Patient Profile\");\n        console.log(response.data.error);\n        alert(response.data.error);\n      } else {\n        console.log(typeof data.copay);\n        console.log(\"Successfully created Patient Profile\");\n        alert(\"Successfully created Patient Profile\");\n        navigate(\"/doctor/home\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PatientRegistrationPage\",\n    children: [/*#__PURE__*/_jsxDEV(DoctorNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientRegistration, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = PatientRegistration;\nexport default PatientRegistration;\nvar _c;\n$RefreshReg$(_c, \"PatientRegistration\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","axios","Yup","useNavigate","DoctorNavbar","jsxDEV","_jsxDEV","PatientRegistration","_s","navigate","initialValues","patient_email","first_name","last_name","streetname","city","state","zipcode","sex","gender","age","date_of_birth","phone_number","profession","card_number","expiration_date","insurance_name","policy_num","group_num","copay","pharmacy_name","pharmacy_streetname","pharmacy_city","pharmacy_state","pharmacy_zipcode","validationSchema","object","shape","string","email","required","onSubmit","data","post","headers","accessToken","sessionStorage","getItem","then","response","error","console","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shubh/OneDrive/Desktop/College/Design Project/client/src/pages/PatientRegistration.js"],"sourcesContent":["import React from 'react'\r\nimport {Formik, Form, Field, ErrorMessage} from \"formik\"\r\nimport axios from \"axios\";\r\nimport * as Yup from \"yup\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DoctorNavbar from '../components/DoctorNavbar';\r\nimport \"../App.css\";\r\n\r\nfunction PatientRegistration() {\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const initialValues = {\r\n        patient_email: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        streetname: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zipcode: \"\",\r\n        sex: \"\",\r\n        gender: \"\",\r\n        age: \"\",\r\n        date_of_birth: \"\",\r\n        phone_number: \"\",\r\n        profession: \"\",\r\n        card_number: \"\",\r\n        expiration_date: \"\",\r\n        insurance_name: \"\",\r\n        policy_num: \"\",\r\n        group_num: \"\",\r\n        copay: \"\",\r\n        pharmacy_name: \"\",\r\n        pharmacy_streetname: \"\",\r\n        pharmacy_city: \"\",\r\n        pharmacy_state: \"\",\r\n        pharmacy_zipcode: \"\"\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        patient_email: Yup.string().email().required(\"Must enter an email!\"),\r\n        first_name: Yup.string().required(\"Must enter your first name!\"),\r\n        last_name: Yup.string().required(\"Must enter your last name!\"),\r\n        streetname: Yup.string().required(\"Must enter the street name of your home address!\"),\r\n        city: Yup.string().required(\"Must enter the city of your home address\"),\r\n        state: Yup.string().required(\"Must enter the state of your home address\"),\r\n        zipcode: Yup.string().required(\"Must enter the zipcode of your home address\"),\r\n        sex: Yup.string().required(\"Must enter your sex!\"),\r\n        gender: Yup.string().required(\"Must enter your gender!\"),\r\n        age: Yup.string().required(\"Must enter your age!\"),\r\n        date_of_birth: Yup.string().required(\"Must enter your date of birth\"),\r\n        phone_number:  Yup.string().required(\"Must enter your phone number!\"),\r\n        profession: Yup.string().required(\"Must enter your profession!\"),\r\n        card_number: Yup.string().required(\"Must enter your credit card number!\"),\r\n        expiration_date: Yup.string().required(\"Must enter your card's expiration date!\"),\r\n        insurance_name: Yup.string().required(\"Must enter the insurance company you use!\"),\r\n        policy_num: Yup.string().required(\"Must enter the policy number!\"),\r\n        group_num: Yup.string().required(\"Must enter the group number!\"),\r\n        copay: Yup.string().required(\"Must enter the copay amount\"),\r\n        pharmacy_name: Yup.string().required(\"Must enter the pharmacy name!\"),\r\n        pharmacy_streetname: Yup.string().required(\"Must enter the street name of your pharmacy!\"),\r\n        pharmacy_city: Yup.string().required(\"Must enter the city of your pharmacy!\"),\r\n        pharmacy_state: Yup.string().required(\"Must enter the state of your pharmacy!\"),\r\n        pharmacy_zipcode: Yup.string().required(\"Must enter the zipcode of your pharmacy!\")\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        axios.post(\"http://localhost:3001/register/patient\", data, {\r\n            headers: {\r\n                accessToken: sessionStorage.getItem(\"accessToken\")\r\n              }\r\n        }).then((response) => {\r\n            if(response.data.error) {\r\n                console.log(\"Failed to create Patient Profile\");\r\n                console.log(response.data.error);\r\n                alert(response.data.error);\r\n            } else {\r\n                console.log(typeof data.copay);\r\n                console.log(\"Successfully created Patient Profile\");\r\n                alert(\"Successfully created Patient Profile\");\r\n                navigate(\"/doctor/home\");\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n  return (\r\n    <div className=\"PatientRegistrationPage\">\r\n        <DoctorNavbar />\r\n        <div>\r\n\r\n        </div>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PatientRegistration"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}